package model;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import java.util.stream.Collectors;

public class Microsoft_Gateway {

	public static void code() {
		// TODO Auto-generated method stub
		List<Integer> a = new ArrayList<Integer>(Arrays.asList(1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6,
				7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 13, 13,
				13, 13, 14, 14, 14, 14, 14, 16, 16, 16, 16, 16, 16, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19,
				19, 19, 19, 19, 19, 20, 20, 20, 20, 20));

		// second <3, 10sec <20, 60 < 60

		Collections.sort(a);
		System.out.println(a);
		Map<Integer, Integer> m = new TreeMap<>();

		for (Integer a1 : a) {
			if (!m.containsKey(a1)) {
				m.put(a1, 1);
			} else {
				m.put(a1, m.get(a1) + 1);

			}
		}
		//
		// 1 1,10
		// 2 2,11
		// 3 3,12
		// 4
		System.out.println(m);
		System.out.println(a.size());

		int index = a.get(a.size() - 1);

		int[] a10 = new int[index + 1];
		int count = 0;
		 
		int l10 = 0;
		Integer s10 = 0;
		Map<Integer, Integer> m10 = new TreeMap<>();

		for (Map.Entry<Integer, Integer> map : m.entrySet()) {
			 
			a10[map.getKey()] = map.getValue();
			  
			if (map.getValue() > 3) {
				count += map.getValue() - 3;
				//   a10[map.getKey()]=3;
			}
				
		}
		
		for(int i=0;i<a10.length;i++) {
			 s10+=a10[i];
			if(i==l10) {
				if(!m10.containsKey(l10)) {
					m10.put(l10, s10);
					s10=0;
				}
				l10+=10;
			}
			
			
		} 
		int count10=0;
		for(Integer v:m10.values()) {
			if(v>20) {
				count10+=v-20;
			}
		}

		System.out.println(m10);
		List<Integer> al10 = Arrays.stream(a10).boxed().collect(Collectors.toList());
		System.out.println(al10);
		System.out.println(count);
		System.out.println(count10);
		System.out.println(count+count10);

	}

}
